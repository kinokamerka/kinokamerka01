from loader import bot, dp
from aiogram import types
from aiogram.dispatcher import FSMContext
from myFilters.admin import IsAdminC
from myFilters.admin import IsAdminCAndChenneger_swich_player, IsAdminCAndChenneger_kbname_player_admin
from fsm_state_ import admin as astate
from data.db import get_AllFilms, only_list, get_AllChennel, delete_Chennel, update_nameChennel, swich_player
from random import randint
from keybord_s.ohter import ikb_back_oikb, ikb_back, ikb_close
from keybord_s.admin import admin_menu_list, admin_menu_main, get_Player_menu, admin_menu_text

#
@dp.callback_query_handler(IsAdminC(), text='back_main_menu_admin')
async def list_data_check(call: types.Message):
    await call.message.edit_reply_markup(admin_menu_main)
    

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É#
@dp.callback_query_handler(IsAdminC(), text='myling_list_start_admin')
async def myling_list_start_admin(call: types.Message, state: FSMContext):
    message_data=await bot.send_message(chat_id=call.from_user.id, text='–•–æ—Ä–æ—à–æ –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏‚úíÔ∏è\n–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —Ä–∞–∑–º–µ—Ç–∫—É‚úÇÔ∏è', reply_markup=ikb_back)
    async with state.proxy() as data:
        data['message_id']=message_data.message_id
    await astate.Admin_State.myling_list.text.set()

#—Å–ø–∏—Å–∫–∏#
@dp.callback_query_handler(IsAdminC(), text='list_data_admin')
async def list_data_check(call: types.Message):
    await call.message.edit_reply_markup(admin_menu_list)

@dp.callback_query_handler(IsAdminC(), text='list_films_admin')
async def list_data_films(call: types.Message):
    file_films=open(file='data//films_data.txt', mode='w+', encoding='UTF-8')
    for i in await get_AllFilms():
        file_films.write(f'–ö–æ–¥: {i[0]}, –Ω–∞–∑–≤–∞–Ω–∏–µ: {i[1]}\n')
    file_films.close()
    try:
        await bot.send_document(chat_id=call.from_user.id, document=open(file='data//films_data.txt', mode='rb'), reply_markup=ikb_close)
    except:
        await call.answer('–£ –≤–∞—Å –Ω–µ—Ç —Ñ–∏–ª—å–º–æ–≤‚ùå')
    
@dp.callback_query_handler(IsAdminC(), text='list_chennel_admin')
async def list_data_films(call: types.Message):
    file_films=open(file='data//chennal_data.txt', mode='w+', encoding='UTF-8')
    for i in await get_AllChennel():
        file_films.write(f'–ò–Ω–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä(–≤–≤–æ–¥–∏—Ç—å –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏): {i[0]}, –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {i[1]}, –°—ã–ª–ª–∫–∞: {i[2]}\n')
    file_films.close()
    try:
        await bot.send_document(chat_id=call.from_user.id, document=open(file='data//chennal_data.txt', mode='rb'), reply_markup=ikb_close)
    except:
        await call.answer('–£ –≤–∞—Å –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤‚ùå')

#–ü—Ä–∏–Ω—è—Ç–∏–µ –∫–∞–ª–ª–±–µ–∫–∞ –æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö#
@dp.callback_query_handler(IsAdminC(), text='add_film_admin')
async def add_film_admin(call: types.Message, state: FSMContext):
    message_data=await bot.send_message(chat_id=call.from_user.id, text='–•–æ—Ä–æ—à–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–¥üîë', reply_markup=types.InlineKeyboardMarkup(row_width=1).\
        add(types.InlineKeyboardButton(text='–°–≥–µ–Ω–∏—Ä–∏—Ä–æ–≤–∞—Ç—å‚ôªÔ∏è', callback_data='generetion_fims_code_admin'), ikb_back_oikb))
    async with state.proxy() as data:
        data['message_id']=message_data.message_id
    await astate.Admin_State.add_film.code.set()

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ —Å–≥–µ–Ω–∏—Ä–∏—Ä–æ–≤–∞—Ç—å#
@dp.callback_query_handler(IsAdminC(), text='generetion_fims_code_admin', state=astate.Admin_State.add_film.code)
async def add_film_generetion_fims_code(call: types.Message, state: FSMContext):
    list_id=await only_list(kortage=await get_AllFilms(type='films_code'))
    while True:
        code=randint(0, 999)
        if code not in list_id:
            break
    async with state.proxy() as data:
        data['code']=code
    await call.message.edit_text('–•–æ—Ä–æ—à–æ —Ç–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µüé´')
    await call.message.edit_reply_markup(ikb_back)
    await astate.Admin_State.add_film.name.set()

#—É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞#
@dp.callback_query_handler(IsAdminC(), text='delete_film_admin')
async def delete_film_admin(message: types.Message, state: FSMContext):
    message_data=await bot.send_message(chat_id=message.from_user.id, text='–•–æ—Ä–æ—à–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞ –∫–æ—Ç–æ—Ä–≥–æ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—åüóë', reply_markup=ikb_back)
    async with state.proxy() as data:
        data['message_id']=message_data.message_id
    await astate.Admin_State.delete_film.code.set()

#–¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞#
@dp.callback_query_handler(IsAdminC(), text='add_chennel_admin')
async def add_chennel_admin(message: types.Message, state: FSMContext):
    message_data=await bot.send_message(chat_id=message.from_user.id, text='–•–æ—Ä–æ—à–æ –¥–∞–π—Ç–µ –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä–∞–≤–∞ –º–Ω–µ "–ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" –∏ "–ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–µ —Å—ã–ª–ª–∫–∞–º–∏", –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ @username –∏–ª–∏ id –∫–∞–Ω–∞–ª–∞ –∫–æ—Ç–æ—Ä–≥–æ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å‚ûï', reply_markup=ikb_back)
    async with state.proxy() as data:
        data['message_id']=message_data.message_id
    await astate.Admin_State.add_chennel.username.set()

#—É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞#
@dp.callback_query_handler(IsAdminC(), text='delete_chennel_admin')
async def add_chennel_admin(message: types.Message, state: FSMContext):
    message_data=await bot.send_message(chat_id=message.from_user.id, text='–•–æ—Ä–æ—à–æ –¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª –∫–æ—Ç–æ—Ä—ã–π —É–¥–∞–ª–∏—Ç—å‚ûñ', reply_markup=ikb_back)
    async with state.proxy() as data:
        data['message_id']=message_data.message_id
    await astate.Admin_State.delete_chennel.username.set()

@dp.callback_query_handler(IsAdminC(), text='check_chennel_admin')
async def check_chennel_admin(message: types.Message, state: FSMContext):
    text=''
    message_data=await bot.send_message(chat_id=message.from_user.id, text='–•–æ—Ä–æ—à–æ —è –ø—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–æ–∂–¥–∏—Ç–µ‚ôªÔ∏è')
    me=await bot.get_me()
    me_username=me.username
    for i in await get_AllChennel():
        try:
            me_chat_status=await bot.get_chat_administrators(chat_id=i[0])
            chat_status=await bot.get_chat(chat_id=i[0])
            await bot.get_chat_member(chat_id=i[0], user_id=message.from_user.id)
            await update_nameChennel(chennel_identifier=i[0], name=chat_status.full_name)
            for e in me_chat_status:
                if e['user']['username'] == me_username:
                    if e['can_invite_users']:
                        text+=f'–ö–∞–Ω–∞–ª: {i[1]} –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É‚úÖ\n\n'
                    else:
                        text+=f'–ö–∞–Ω–∞–ª: {i[1]} –Ω–µ –∏–º–µ—é –¥–æ—Å—Ç—É–ø –∫ —Å—ã–ª–ª–∫–∞–º‚ùóÔ∏è\n\n'
                    await bot.edit_message_text(chat_id=message.from_user.id, message_id=message_data.message_id, text=f'–•–æ—Ä–æ—à–æ —è –ø—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–æ–∂–¥–∏—Ç–µ‚ôªÔ∏è\n\n{text}')
                    break
        except:
            await delete_Chennel(chennel_identifier=i[0])
            text+=f'–ë—ã–ª —É–¥–∞–ª–µ–Ω {i[1]}üóë\n\n'
            await bot.edit_message_text(chat_id=message.from_user.id, message_id=message_data.message_id, text=f'–•–æ—Ä–æ—à–æ —è –ø—Ä–æ–≤–µ—Ä—è—é –ø–æ–¥–æ–∂–¥–∏—Ç–µ‚ôªÔ∏è\n\n{text}')
    await bot.edit_message_text(chat_id=message.from_user.id, message_id=message_data.message_id, text=f'–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞‚ùáÔ∏è\n\n{text}\n\n–¢–∞–∫ –∂–µ –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ —Ç–æ –≤ –∫–Ω–æ–ø–∫–µ –æ–Ω–∏ —Ç–æ–∂–µ –ø–æ–º–µ–Ω—è—é—Ç—Å—èüî∞', reply_markup=ikb_close)

@dp.callback_query_handler(IsAdminC(), text='player_settings_admin')
async def settings_player(call: types.CallbackQuery):
    await call.message.edit_reply_markup(await get_Player_menu())

#–≤–∫–ª./–≤—ã–∫–ª. –ø–ª–µ–µ—Ä–æ–≤#
@dp.callback_query_handler(IsAdminCAndChenneger_kbname_player_admin())
async def chennger_kbname_player_admin(call: types.CallbackQuery, state: FSMContext):
    message_data1=await bot.send_message(chat_id=call.from_user.id, text='–•–æ—Ä–æ—à–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏üìå', reply_markup=ikb_back)
    message_data2=call.message
    async with state.proxy() as data:
        data['message_id1']=message_data1.message_id
        data['message_id2']=message_data2.message_id
        data['name_kb']=call.data[29:]
    await astate.Admin_State.chennger_kbname_player.text.set()

@dp.callback_query_handler(IsAdminCAndChenneger_swich_player())
async def swich_player_admin(call: types.CallbackQuery):
    await swich_player(player_name=call.data[28:])
    await call.message.edit_reply_markup(await get_Player_menu())
    
@dp.callback_query_handler(IsAdminC(), text='text_settings_admin')
async def text_settings_admin(call: types.CallbackQuery):
    await call.message.edit_reply_markup(admin_menu_text)

@dp.callback_query_handler(IsAdminC(), text='chenneger_wellcome_text_settings_admin')
async def chennger_wellcome_text_settings_admin(call: types.CallbackQuery, state: FSMContext):
    message_data=await bot.send_message(chat_id=call.from_user.id, text='{username_bot}-username –±–æ—Ç–∞\n{bot_id}-id –±–æ—Ç–∞\n{username}-username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{full_name}-–ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{user_id}-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n–ú–æ–∂–Ω–æ –∏–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ç–∫—É MARKDOWN‚úÇÔ∏è\n\n–•–æ—Ä–æ—à–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µüñä', reply_markup=ikb_back)
    async with state.proxy() as data:
        data['message_id']=message_data.message_id
    await astate.Admin_State.chennger_wellcome_text.text.set()

@dp.callback_query_handler(IsAdminC(), text='chenneger_film_text_settings_admin')
async def chennger_wellcome_text_settings_admin(call: types.CallbackQuery, state: FSMContext):
    message_data=await bot.send_message(chat_id=call.from_user.id, text='{username_bot}-username –±–æ—Ç–∞\n{bot_id}-id –±–æ—Ç–∞\n{username}-username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{full_name}-–ø–æ–ª–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{user_id}-id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n{film_name}-–Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞\n{film_code}-–∫–æ–¥ –æ—Ç —Ñ–∏–ª—å–º–∞\n\n–ú–æ–∂–Ω–æ –∏–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ç–∫—É HTML‚úÇÔ∏è\n\n–•–æ—Ä–æ—à–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è —Ñ–∏–ª—å–º–æ–≤üñä', reply_markup=ikb_back)
    async with state.proxy() as data:
        data['message_id']=message_data.message_id
    await astate.Admin_State.chennger_film_text.text.set()

